<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract local variable &apos;result&apos; from expression &apos;myMath.sum(new int[]{1,2,3})&apos;&#x0A;- Original project: &apos;junit-in-5-steps&apos;&#x0A;- Variable name: &apos;result&apos;&#x0A;- Destination method: &apos;com.purna.junit.MyMathTest.sum_with3numbers()&apos;&#x0A;- Variable expression: &apos;myMath.sum(new int[]{1,2,3})&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;result&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/test&lt;com.purna.junit{MyMathTest.java" name="result" replace="true" selection="227 33" stamp="1645761546973" varType="false" version="1.0"/>&#x0A;<refactoring comment="Inline local variable &apos;com.purna.junit.MyMathTest.sum_with3numbers().result&apos; in &apos;com.purna.junit.MyMathTest.sum_with3numbers()&apos;&#x0A;- Original project: &apos;junit-in-5-steps&apos;&#x0A;- Original element: &apos;com.purna.junit.MyMathTest.sum_with3numbers().result&apos;" description="Inline local variable &apos;result&apos;" id="org.eclipse.jdt.ui.inline.temp" input="/test&lt;com.purna.junit{MyMathTest.java" selection="276 0" stamp="1645761940051" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;com.purna.junit.AssertTeast&apos; to &apos;AssertTest&apos;&#x0A;- Original project: &apos;junit-in-5-steps&apos;&#x0A;- Original element: &apos;com.purna.junit.AssertTeast&apos;&#x0A;- Renamed element: &apos;com.purna.junit.AssertTest&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;AssertTeast&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/test&lt;com.purna.junit{AssertTeast.java[AssertTeast" matchStrategy="1" name="AssertTest" qualified="false" references="true" similarDeclarations="false" stamp="1645762220773" textual="false" version="1.0"/>
</session>